{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = List;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ItemList = _interopRequireDefault(require(\"../../components/ItemList\"));\n\nvar _firebase = require(\"../../config/firebase\");\n\nvar _jsxFileName = \"/Users/lucas/Desktop/aulaReact1502/rn-firebase-crud/src/screens/List/index.js\";\n\nvar itemsRef = _firebase.db.ref('/items');\n\nfunction List() {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    new Promise(function (resolve) {\n      itemsRef.on('value', function (snapshot) {\n        var data = snapshot.val();\n        var fetched = Object.values(data);\n        resolve(fetched);\n      });\n    }).then(function (data) {\n      return setItems(data);\n    });\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, items.length > 0 ? _react.default.createElement(_ItemList.default, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }\n  }) : _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 56\n    }\n  }, \"No items\"));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  }\n});","map":{"version":3,"sources":["/Users/lucas/Desktop/aulaReact1502/rn-firebase-crud/src/screens/List/index.js"],"names":["itemsRef","db","ref","List","items","setItems","Promise","resolve","on","snapshot","data","val","fetched","Object","values","then","styles","container","length","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;AAEA,IAAIA,QAAQ,GAAGC,aAAGC,GAAH,CAAO,QAAP,CAAf;;AAEe,SAASC,IAAT,GAAgB;AAAA,kBACH,qBAAS,EAAT,CADG;AAAA;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAG7B,wBAAU,YAAM;AACd,QAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvBP,MAAAA,QAAQ,CAACQ,EAAT,CAAY,OAAZ,EAAqB,UAACC,QAAD,EAAc;AACjC,YAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;AACA,YAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAd;AAEAH,QAAAA,OAAO,CAACK,OAAD,CAAP;AACD,OALD;AAMD,KAPD,EAOGG,IAPH,CAOQ,UAACL,IAAD;AAAA,aAAUL,QAAQ,CAACK,IAAD,CAAlB;AAAA,KAPR;AAQD,GATD,EASG,EATH;AAWA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,MAAN,GAAe,CAAf,GAAmB,6BAAC,iBAAD;AAAU,IAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAgD,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADnD,CADF;AAKD;;AAED,IAAMY,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nimport ItemList from '../../components/ItemList';\n\nimport { db } from '../../config/firebase';\n\nlet itemsRef = db.ref('/items');\n\nexport default function List() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    new Promise((resolve) => {\n      itemsRef.on('value', (snapshot) => {\n        let data = snapshot.val();\n        let fetched = Object.values(data);\n\n        resolve(fetched);\n      });\n    }).then((data) => setItems(data));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {items.length > 0 ? <ItemList items={items} /> : <Text>No items</Text>}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ebebeb',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}